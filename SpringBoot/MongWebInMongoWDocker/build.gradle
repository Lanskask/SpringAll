buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
      url "https://plugins.gradle.org/m2/"
    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		// classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker' // version '0.20.1'

// group = 'com.example'
group = 'springio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

bootJar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
	mavenCentral()
	// jcenter()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-web')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

docker {
 		// dockerfile('Dockerfile')
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

// task buildDocker(type: Docker, dependsOn: build) {
//   push = true
//   applicationName = jar.baseName
//   dockerfile = file('Dockerfile')
//   doFirst {
//     copy {
//       from jar
//       into stageDir
//     }
//   }
// }